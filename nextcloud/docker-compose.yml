version: '2'

volumes:
  db:
  redis:

services:
  nextcloud_db:
    image: postgres:latest
    restart: always
    container_name: nextcloud_db
    env_file: .env
    volumes:
      - nextcloud_db:/var/lib/postgresql/data
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    networks:
      - nextcloud

  app:
    image: nextcloud:latest
    restart: always
    container_name: nextcloud
    env_file: .env
    depends_on:
      - nextcloud_db
      - redis
    volumes:
      - ${NEXTCLOUD_CONFIG}:/var/www/html
      - ${NEXTCLOUD_DATA}:/var/www/html/data
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - REDIS_HOST=${REDIS_HOST}
      - PHP_MEMORY_LIMIT=${MEMORY_LIMIT}
    labels:
      # GENERAL
      - "traefik.enable=true"
      - "traefik.http.services.nextcloud.loadbalancer.server.port=80"
      # HTTPS
      - "traefik.http.routers.nextcloud-https.rule=Host(`${PRIMARY_NEXTCLOUD_HOST}`) || Host(`${SECONDARY_NEXTCLOUD_HOST}`)"
      - "traefik.http.routers.nextcloud-https.entrypoints=websecure"
      - "traefik.http.routers.nextcloud-https.tls=true"
      - "traefik.http.routers.nextcloud-https.tls.certresolver=production"
    networks:
      - traefik_proxy
      - nextcloud

  redis:
    image: redis:latest
    restart: always
    container_name: nextcloud_redis
    volumes:
      - redis:/data
    networks:
      - nextcloud

networks:
  traefik_proxy:
    external: true
  nextcloud:
    internal: true